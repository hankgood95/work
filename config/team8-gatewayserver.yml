server:
  port: 8080  # Gateway 서버 포트 (기본값: 8080)

spring:
  application:
    name: team8-gatewayserver  # Config Server에서 가져올 이름

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # Eureka에서 서비스 목록 자동 감지
          lower-case-service-id: true  # 서비스 ID를 소문자로 변환하여 매칭
      routes:
        - id: accounts-service  # eureka team8-accounts 서비스 라우팅
          uri: lb://team8-accounts
          predicates:
            - Path=/accounts/** # /accounts 로 시작하는 모든 요청을 매핑
          filters:
            - StripPrefix=1  # /accounts 제거 후 백엔드 서비스로 전달

        - id: cards-service  # eureka team8-cards 서비스 라우팅
          uri: lb://team8-cards
          predicates:
            - Path=/cards/** # /cards 로 시작하는 모든 요청을 매핑
          filters:
            - StripPrefix=1  # /cards 제거 후 백엔드 서비스로 전달

        - id: loans-service  # eureka team8-loans 서비스 라우팅
          uri: lb://team8-loans
          predicates:
            - Path=/loans/** # /loans 로 시작하는 모든 요청을 매핑
          filters:
            - StripPrefix=1  # /loans 제거 후 백엔드 서비스로 전달

eureka:
  client:
    service-url:
      defaultZone: http://team8-eureka:80/eureka/
    register-with-eureka: true
    fetch-registry: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
        
  endpoint:
    gateway:
      access: unrestricted
      # enabled: true  # Gateway의 라우트 확인을 위한 Actuator 설정 # 운영중일때 유용
      
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
